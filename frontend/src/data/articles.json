[
  {
    "id": 2,
    "title": "ChatGPT生成接口测试用例（一）",
    "url": "https://www.cnblogs.com/tester2test/p/18619460",
    "content": "\n<img src=\"https://img2024.cnblogs.com/blog/15184/202412/15184-20241220154829587-467838433.jpg\" width=\"300\"  referrerpolicy=\"no-referrer\">\n\n\n\n\n\n　　接口测试在软件开发生命周期中扮演着至关重要的角色，有助于验证不同模块之间的交互是否正确。若协议消息被恶意修改，系统是否能够恰当处理，以确保系统的功能正常运行，不会出现宕机或者安全问题。\n\n## 5.1 ChatGPT在接口测试中的角色\n\n　　接口测试是确保系统各个模块协同工作的关键环节。传统的接口测试用例编写通常依赖于测试人员的经验、手动操作，这可能导致接口测试用例的不充分和测试内容的遗漏。ChatGPT能够理解和生成文本使其成为编写接口测试用例的理想工具。\n\n### 5.1.1 理解系统需求和接口规范\n\n　　ChatGPT可以用来解析系统需求规格说明书和接口文档。通过输入相关文档，ChatGPT可以生成摘要、要点和问题列表等，帮助测试人员更好地把握测试的范围和重点。\n\n　　假设我们正在测试一个电子商务网站的购物车接口。我们有系统需求文档和接口文档，但它们很冗长，需要花费大量的时间阅读、理解。但是有了ChatGPT以后，只需要将这些文档输入ChatGPT，它就可以快速给出摘要，列出所有与购物车相关的功能和要点等。这有助于快速地确定测试重点，确保接口测试用例的全面性。\n\n### 5.1.2 生成测试用例模板\n\n　　ChatGPT可以协助测试团队生成测试用例的模板，包括输入数据、操作步骤和预期结果等。测试人员可以向ChatGPT提供接口描述和测试目标，ChatGPT会自动生成基本的测试用例结构。测试用例模板化以后，既可以加快测试用例的编写速度，又能确保测试用例的一致性。\n\n　　对于一个社交媒体平台的接口测试，我们需要测试用户发布帖子的功能。通过描述接口规范和测试目标，ChatGPT可以自动生成测试用例模板，包括帖子内容、发布操作的步骤和预期的发布结果等。这样，测试人员只需填写具体的内容，而不必从头开始编写每个接口测试用例。\n\n例如，对于一个电子商务网站的购物车接口，ChatGPT生成的接口文档如下所示。\n\n**ChatGPT****生成的接口文档**\n\n> \n**接口名称：**add_to_cart\n**接口概述：**该接口用于将指定商品添加到购物车。\n**请求方式：**POST请求\n**请求****URL****：**https://example.com/api/add_to_cart\n**参数列表：**\n<ul>\n   item_id（商品ID）   \n</ul>\n参数描述：用于指定要添加到购物车的商品的唯一标识。\n参数类型：整数\n是否必填：是\n<ul>\n   num（数量）   \n</ul>\n参数描述：指定要添加的商品数量。\n参数类型：整数\n是否必填：是\n**请求示例：**\nPOST请求https://example.com/api/add_to_cart\n**请求体：**\n{\n\"item_id\": 12345，\n\"num\": 2\n}\n\n**响应示例：**\n{\n\"status\": 200，\n\"message\": \"添加商品到购物车成功\"，\n\"data\": {\n\"cart_total_items\": 5\n}\n}\n\n**响应字段说明：**\nstatus：标识业务是否成功的状态码。\n<ul>\n    200 表示请求成功，商品成功添加到购物车。   \n    其他状态码可根据具体情况自行定义。   \n</ul>\nmessage：状态信息，对状态码的详细描述。\ndata：包含响应数据。\n<ul>\n    cart_total_items：购物车中的总商品数量。   \n</ul>\n\n\n\n\n### 5.1.3 探索边界条件\n\n 在接口测试中，通常需要测试各种输入数据的边界条件和异常情况。ChatGPT可以帮助测试人员生成边界条件的接口测试用例，确保系统能够正确处理各种情况。\n\n在电子商务网站的购物车接口的测试中，我们需要确保它能够正确处理购买的商品数量的输入，包括正常的商品数量输入和异常地输入。异常输入可能包括带小数点的数字、字母、全角数字、中文字符以及货币符号等特殊字符。不同类型的数据库具有不同的数字上下限，例如，在MySQL中，SMALLINT类型占用2个字节，可以存储从-32768到32767的整数。因此，我们需要考虑商品数量超过上限、低于下限、等于上限、等于下限以及0作为特殊数字和正常数字等各种边界情况的测试用例。\n\n 很多情况下，通过UI无法提交的数字，若接口测试通过协议直接发送请求，在应用程序的后台没有进行校验并且数据库没有添加约束条件的情况下，仍然可以正常提交，这可能导致数据无法正常存储等严重问题。\n\n 例如，购物车中单个商品数量最大可以为9999，考虑边界值测试用例方法设计接口测试用例，则可以获得以下边界用例，ChatGPT生成的边界值接口测试用例如下所示。\n\n**ChatGPT****生成的边界值接口测试用例**\n\n> \n用例编号：TC001\n用例名称:添加数量为0的商品\n输入参数:\nitem_id: 123456\nnum: 0\n预期结果:\n添加失败，提示数量不能为0\n......\n用例编号：TC005\n用例名称:添加超过库存的商品\n输入参数:\nitem_id: 123456\nnum: 10000\n预期结果:\n添加失败，提示超过库存\n......\n\n\n\n",
    "labels": [],
    "created_at": "2024-12-20T16:17:55Z"
  },
  {
    "id": 1,
    "title": "LLM后训练绝招：1%预训练成本，实现最高20倍算力扩展效果",
    "url": "https://blog.csdn.net/OneFlow_Official/article/details/144124481",
    "content": "\n<img alt=\"d752e993e29569be524ff4dbc483663b.png\" src=\"https://img-blog.csdnimg.cn/img_convert/d752e993e29569be524ff4dbc483663b.png\" referrerpolicy=\"no-referrer\">\n\n\n\n根据规模定律，扩大训练计算规模可以提高大型语言模型（LLM）性能的关键，但调研机构Epoch AI的研究，LLM再训练无需高额费用，也能让AI能力获得显著提升。\n\n 在该研究中，他们引入了一个基本框架，用于量化后训练增强的收益和成本，特别是通过计算等效增益来衡量收益。他们将该框架应用于一系列具有代表性的后训练增强，并发现性能提升非常显著，但微调成本通常与预训练成本相比非常小，某些后训练增强技术可以在不到1%预训练成本的情况下，提供相当于增加5到20倍预训练计算资源获得的效果。\n\n （本文由OneFlow编译发布，转载请联系授权。原文：https://epochai.org/blog/ai-capabilities-can-be-significantly-improved-without-expensive-retraining）\n\n**<strong>作者**|</strong>**<strong>EPOCH AI**</strong>\n\n**OneFlow编译**\n\n<strong>翻译｜刘乾裕\n**题图由****[SiliconCloud]()平台生成**</strong>\n\n近年来，训练大语言模型和类似基础模型所需的高强度计算资源，已成为推动人工智能进步的主驱动力之一。这也让人们深刻认识到一个“惨痛教训”：更好利用计算资源的通用方法最终被证明是最有效的。如今，训练最前沿模型的成本已经高到只有少数参与者能够承担（https://epochai.org/blog/trends-in-the-dollar-training-cost-of-machine-learning-systems）。\n\n我们的研究探讨了在训练完成后提升模型性能的方法，这些方法无需依赖大量计算资源。我们将这些改进措施分为五类，详见下表。\n\n<img alt=\"9f94c575ad16d35fefad5a9b4e08391f.png\" src=\"https://img-blog.csdnimg.cn/img_convert/9f94c575ad16d35fefad5a9b4e08391f.png\" referrerpolicy=\"no-referrer\">\n\n\n\n后训练增强的类别及示例\n \n\n你可以在此处阅读完整论文（https://arxiv.org/abs/2312.07413）。本文由Epoch AI、Open Philanthropy、加州大学伯克利分校和ORCG合作完成。\n\n### **1**\n\n### **关键成果**\n\n**计算等效增益 (CEG）**：我们提出了计算等效增益这一概念，用于量化各类增强方法带来的性能提升。CEG被定义为在不采用增强的情况下，预训练计算量需要增加多少才能达到与增强方法相同的基准性能提升。我们开发了一种基于公开基准进行评估的估算方法，以此来计算CEG。\n\n<img alt=\"2e24ca31a86d2cbd9f8bc911a8e12cc4.jpeg\" src=\"https://img-blog.csdnimg.cn/img_convert/2e24ca31a86d2cbd9f8bc911a8e12cc4.jpeg\" referrerpolicy=\"no-referrer\">\n\n\n\n该示例中，CEG（计算等效增益）是5倍。同样的性能提升可以通过应用后训练增强（PTE）或将预训练计算规模扩大5倍来实现。\n\n**后训练增强效果调查（PTE）**：我们对PTE进行了研究，涵盖了五个方面即工具、提示、辅助结构（scaffolding）、解决方案选择和数据增强。他们的CEG估算值通常在相关基准数值的5到30倍之间。\n\n我们还对这些PTE的计算成本进行了估算，主要包括两类：一是使模型能够应用PTE所需的初始成本（例如，微调模型以学习使用某种工具）；二是推理过程中产生的持续成本（例如，增强方法需要生成多个样本并从中选取最佳结果）。对于我们评估的所有PTE，其初始成本通常低于预训练成本的10%，大部分甚至不到0.1%。尽管大多数情况下推理成本不会受到明显影响，但在个别情况下推理成本可能会增加至100倍左右。\n\n<img alt=\"45c9d55646bfa168b6cc2697f2759dc3.png\" src=\"https://img-blog.csdnimg.cn/img_convert/45c9d55646bfa168b6cc2697f2759dc3.png\" referrerpolicy=\"no-referrer\">\n\n\n\n结果概要：使用计算等效增益量化的技术所产生的改进。x轴展示了相关的一次性成本（左）和推理成本（右）。\n\n### **2**\n\n### **政策影响**\n\n随着后训练增强技术的不断发展和完善，已部署的大语言模型功能将会随着时间推移而增强。这一发现表明，安全策略（例如，负责任扩展策略，metr.org/blog/2023-09-26-rsp）应当包含一个“安全缓冲区”：限制那些在未来随着后训练增强，可能达到危险水平的模型功能。\n\n由于这些增强功能的计算成本较低，更多参与者能够加入开发，不再局限于那些具备大规模预训练能力的主体。这使得能力提升趋向民主化，但也为AI发展的监管带来新挑战，因为仅关注那些拥有大量计算资源的实体已不足以有效应对未来的风险。\n\n其他人都在看\n    [推算LLM训练的GPU内存需求]()        [用初中数学理解LLM工作原理]()        [企业AI调查:AI支出激增6倍，多模型部署盛行]()        [10倍工程师编码工具：Cursor x SiliconCloud]()        [强化学习之父Rich Sutton：AGI研究下一个范式]()        [大模型训练秘方:1000次超参数优化实验的发现]()        [LLM逻辑推演策略：推理时计算vs训练时计算]()    \n\n\n\n**让超级产品开发者实现“Token自由”**\n \n\n**<em>**[邀请好友体验SiliconCloud]()，****</em>**<em>**狂送2000万Token/人****</em>\n\n****邀请越多，Token奖励越多****\n****[siliconflow.cn/zh-cn/siliconcloud](http://siliconflow.cn/zh-cn/siliconcloud)****\n",
    "labels": [],
    "created_at": "2024-12-20T23:16:47Z"
  }
]